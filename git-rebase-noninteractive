#!/bin/bash

usage() {
    echo "Usage: git rebase-noninteractive COMMIT"
    echo
    echo "Options:"
    echo "  -h --help  Displays this help."
    echo
    echo "Arguments:"
    echo "  COMMIT  The commit to use as the upstream"
    [[ -z $1 ]] && return
    echo
    echo "Description:"
    echo "  Performs an interactive git rebase without the interactivity."
    echo "  Intended usage is to clean up fixup! / squash! commits."
}

opt_editor=
while (( $# > 0 )); do
    case $1 in
        -h|--help)
            usage full
            exit
            ;;
        --editor)
            opt_editor=yes
            ;;
        --)
            shift
            break
            ;;
        -*)
            echo "error: unknown flag $1" >&2
            usage >&2
            exit 2
            ;;
        *)
            break
    esac
    shift
done

if [[ -n $opt_editor ]]; then
    # editor mode, verify that we have at least one fixup/squash command
    file=$1
    if [[ -z $file ]]; then
        echo "error: expected file argument" >&2
        exit 1
    fi
    if [[ ! -f $file ]]; then
        echo "error: file '$file' not found" >&2
        exit 1
    fi
    if ! recipe=$(< "$file"); then
        echo "error: failed to read file '$file'" >&2
        exit 1
    fi
    good=
    while read -r action _; do
        case $action in
            fixup|squash)
                good=yes
                ;;
        esac
    done <<<"$recipe"
    if [[ -z $good ]]; then
        echo "No fixup/squash instructions found; is the commit correct?" >&2
        exit 1
    fi
    exit 0
fi

if (( $# != 1 )); then
    usage >&2
    exit 1
fi

commit=$1

exec git -c core.editor='git-rebase-noninteractive --editor' rebase -i --autosquash "$commit"
