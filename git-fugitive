#!/bin/bash

set -e
shopt -s extglob

usage() {
    echo "Usage: git fugitive REV [--] [FILE]"
    echo
    echo "Options:"
    echo "  -h --help  Displays this help."
    echo
    echo "Arguments:"
    echo "  REV   The revision to show."
    echo "  FILE  An optional file to show."
    [[ -z $1 ]] && return
    echo
    echo "Description:"
    echo "  Displays a given REV or FILE in vim-fugitive."
    echo
    echo "  Requires the vim-fugitive plugin to Vim to be installed."
}

abspath() {
    local path=$1
    local result
    if [[ "$path" == /* ]]; then
        result=/
        path=${path#/}
    else
        result=.
    fi
    while [[ -n "$path" ]]; do
        local comp=${path%%/*}
        if [[ "$comp" == "$path" ]]; then
            path=
        else
            path=${path#*/}
        fi
        case "$comp" in
            '')
                continue;;
            .)
                continue;;
            ..)
                case "$result" in
                    /)
                        continue;;
                    .)
                        result=..;;
                    /*)
                        result=/;;
                    */*)
                        result=${result%/*};;
                    *)
                        result=.;;
                esac;;
            *)
                case "$result" in
                    .)
                        result=$comp;;
                    /)
                        result+=$comp;;
                    *)
                        result+=/$comp;;
                esac;;
        esac
    done
    [[ "$result" = . ]] && result+=/
    printf "%s\n" "$result"
}

while (( $# > 0 )); do
    case $1 in
        -h|--help)
            usage full
            exit
            ;;
        --)
            # we don't allow -- before REV
            echo "error: expected revision" >&2
            usage >&2
            exit 2
            ;;
        -*)
            echo "error: unknown flag $1" >&2
            usage >&2
            exit 2
            ;;
        *)
            break
            ;;
    esac
done

REV=$1
{ shift && test -n "$REV"; } || { usage >&2; exit 1; }
[[ $1 == -- ]] && shift
FILE=$1
shift && {
    test -n "$FILE" || { usage >&2; exit 1; }
}
shift && { usage >&2; exit 1; }

REV=$(git rev-parse --verify "$REV")
# ensure it references a commit and not a file
git rev-parse "$REV^{commit}" >/dev/null

git_dir=$(git rev-parse --git-dir)
prefix=$(git rev-parse --show-prefix)

if [[ "$git_dir" != /* ]]; then
    git_dir=${PWD%/}/$git_dir
fi

path=$REV
if [[ -n "$FILE" ]]; then
    path+=$(abspath "/$prefix$FILE")
fi

exec vim "fugitive://${git_dir%/}//$path"
